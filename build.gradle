plugins {
    id "org.gradle.base"
    id "org.shipkit.shipkit-changelog" version "1.2.0"
    id "org.shipkit.shipkit-github-release" version "1.2.0"
    id "org.shipkit.shipkit-auto-version" version "1.2.2"
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
    id "org.jetbrains.kotlin.jvm" version "2.1.20" apply false
    id "org.jetbrains.dokka" version "1.9.10" apply false
}

def test = tasks.register("test") {
    dependsOn gradle.includedBuild("tests").task(":test")
}
tasks.named("check") {
    dependsOn test
}

def isSnapshot = version.endsWith("-SNAPSHOT")
def githubTokenProvider = providers.environmentVariable("GITHUB_TOKEN").orElse("")
def githubShaProvider = providers.environmentVariable("GITHUB_SHA").orElse("")
def repository = "mockito/mockito"

tasks.named("generateChangelog") {
    previousRevision = project.ext.'shipkit-auto-version.previous-tag'
    githubToken = githubTokenProvider.get()
    repository = repository
}

tasks.named("githubRelease") {
    def genTask = tasks.named("generateChangelog").get()
    dependsOn genTask
    repository = repository
    changelog = genTask.outputFile
    githubToken = githubTokenProvider.get()
    newTagRevision = githubShaProvider.get()
}

// Will be used to handle Sonatype staging repositories.
group = 'org.mockito.kotlin'

nexusPublishing {
    repositories {
        if (System.getenv("NEXUS_TOKEN_PWD")) {
            sonatype {
                nexusUrl = uri("https://ossrh-staging-api.central.sonatype.com/service/local/")
                snapshotRepositoryUrl = uri("https://central.sonatype.com/repository/maven-snapshots/")

                username = System.getenv("NEXUS_TOKEN_USER")
                password = System.getenv("NEXUS_TOKEN_PWD")
            }
        }
    }
}

if (isSnapshot) {
    println "Building a -SNAPSHOT version (Github release and Maven Central tasks are skipped)"
    tasks.named("githubRelease") {
        //snapshot versions do not produce changelog / Github releases
        enabled = false
    }
    tasks.named("closeAndReleaseStagingRepository") {
        //snapshot binaries are available in Sonatype without the need to close the staging repo
        enabled = false
    }
}

tasks.register("releaseSummary") {
    doLast {
        if (isSnapshot) {
            println "RELEASE SUMMARY\n" +
                    "  SNAPSHOTS released to: https://s01.oss.sonatype.org/content/repositories/snapshots/org/mockito/kotlin/mockito-kotlin\n" +
                    "  Release to Maven Central: SKIPPED FOR SNAPSHOTS\n" +
                    "  Github releases: SKIPPED FOR SNAPSHOTS"
        } else {
            println "RELEASE SUMMARY\n" +
                    "  Release to Maven Central (available after delay): https://repo1.maven.org/maven2/org/mockito/kotlin/mockito-kotlin/\n" +
                    "  Github releases: https://github.com/mockito/mockito-kotlin/releases"
        }
    }
}
